"use strict";(self.webpackChunkapi_docs=self.webpackChunkapi_docs||[]).push([[5633],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var l=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,l,a=function(e,t){if(null==e)return{};var n,l,a={},i=Object.keys(e);for(l=0;l<i.length;l++)n=i[l],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(l=0;l<i.length;l++)n=i[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=l.createContext({}),p=function(e){var t=l.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=p(e.components);return l.createElement(o.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},d=l.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),d=a,g=u["".concat(o,".").concat(d)]||u[d]||m[d]||i;return n?l.createElement(g,r(r({ref:t},c),{},{components:n})):l.createElement(g,r({ref:t},c))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,r=new Array(i);r[0]=d;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[u]="string"==typeof e?e:a,r[1]=s;for(var p=2;p<i;p++)r[p]=n[p];return l.createElement.apply(null,r)}return l.createElement.apply(null,n)}d.displayName="MDXCreateElement"},24475:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var l=n(87462),a=(n(67294),n(3905));const i={title:"Pitel Flutter Voip",slug:"/",sidebar_position:1},r="Integrate Voip call to your app",s={unversionedId:"flutter_pitel_voip",id:"flutter_pitel_voip",title:"Pitel Flutter Voip",description:"N|Solid",source:"@site/pitel_app_voip/flutter_pitel_voip.md",sourceDirName:".",slug:"/",permalink:"/pitel_app_voip/",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Pitel Flutter Voip",slug:"/",sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Push notification",permalink:"/pitel_app_voip/push_notif"}},o={},p=[{value:"Demo",id:"demo",level:2},{value:"Pitel Connect Flow",id:"pitel-connect-flow",level:2},{value:"Features",id:"features",level:2},{value:"Installation",id:"installation",level:2},{value:"Android:",id:"android",level:4},{value:"IOS",id:"ios",level:4},{value:"Usage",id:"usage",level:2},{value:"How to use call screen.",id:"how-to-use-call-screen",level:4},{value:"Implement SipPitelHelperListener in your Home screen,",id:"implement-sippitelhelperlistener-in-your-home-screen",level:4},{value:"Register extension",id:"register-extension",level:4},{value:"Initialize call screen",id:"initialize-call-screen",level:4},{value:"Example",id:"example",level:2},{value:"How to test",id:"how-to-test",level:2}],c={toc:p},u="wrapper";function m(e){let{components:t,...i}=e;return(0,a.kt)(u,(0,l.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"integrate-voip-call-to-your-app"},"Integrate Voip call to your app"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://documents.tel4vn.com/"},(0,a.kt)("img",{parentName:"a",src:"https://documents.tel4vn.com/img/pitel-logo.png",alt:"N|Solid"}))),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"plugin_pitel")," is package support for voip call.\nPlease install package from ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/tel4vn/flutter-pitel-voip/tree/1.0.2"},"plugin_pitel")),(0,a.kt)("h2",{id:"demo"},"Demo"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Register extension",src:n(92219).Z,width:"300",height:"650"}),"\n",(0,a.kt)("img",{alt:"call",src:n(30015).Z,width:"300",height:"649"})),(0,a.kt)("h2",{id:"pitel-connect-flow"},"Pitel Connect Flow"),(0,a.kt)("p",null,'When user make call from Pitel Connect app, Pitel Server pushes a notification for all user login (who receives the call). When user "Accept" call, extension will re-register to receive call.\n',(0,a.kt)("img",{alt:"Pitel Connect Flow",src:n(64445).Z,width:"1726",height:"976"})),(0,a.kt)("h2",{id:"features"},"Features"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Register Extension"),(0,a.kt)("li",{parentName:"ul"},"Call"),(0,a.kt)("li",{parentName:"ul"},"Hangup"),(0,a.kt)("li",{parentName:"ul"},"Turn on/off micro"),(0,a.kt)("li",{parentName:"ul"},"Turn on/of speaker")),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Install Packages\nCheckout package from ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/tel4vn/flutter-pitel-voip/tree/1.0.2"},"plugin_pitel"),"\nAdd pubspec.yaml:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"plugin_pitel:\n    git:\n      url: https://github.com/tel4vn/flutter-pitel-voip.git\n      ref: 1.0.2 # branch name\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"Get package")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"flutter pub get\n")),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},"Import")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import 'package:plugin_pitel/flutter_pitel_voip.dart';\n")),(0,a.kt)("ol",{start:4},(0,a.kt)("li",{parentName:"ol"},"Configure Project")),(0,a.kt)("h4",{id:"android"},"Android:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"In file ",(0,a.kt)("inlineCode",{parentName:"li"},"android/app/src/main/AndroidManifest.xml"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},' <manifest...>\n    ...\n    // Request permission\n    <uses-permission android:name="android.permission.INTERNET" />\n    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />\n    <uses-permission android:name="android.permission.RECORD_AUDIO" />\n    <uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS"/>\n    <uses-permission android:name="android.permission.CAMERA" />\n    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW" />\n    <uses-permission android:name="android.permission.FOREGROUND_SERVICE"/>\n </manifest>\n')),(0,a.kt)("h4",{id:"ios"},"IOS"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Request permission in file ",(0,a.kt)("inlineCode",{parentName:"li"},"Info.plist"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},"<key>NSCameraUsageDescription</key>\n<string>This app needs camera access to scan QR codes</string>\n<key>NSMicrophoneUsageDescription</key>\n<string>Use microphone</string>\n<key>UIBackgroundModes</key>\n<array>\n    <string>external-accessory</string>\n    <string>fetch</string>\n    <string>processing</string>\n    <string>remote-notification</string>\n    <string>voip</string>\n</array>\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Make sure platform ios ",(0,a.kt)("inlineCode",{parentName:"li"},"12.0")," in ",(0,a.kt)("inlineCode",{parentName:"li"},"Podfile"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},"platform :ios, '12.0'\n")),(0,a.kt)("ol",{start:5},(0,a.kt)("li",{parentName:"ol"},"Pushkit - Received VoIP and Wake app from Terminated State (only for IOS).")),(0,a.kt)("p",null,"Please check ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/tel4vn/flutter-pitel-voip/blob/main/PUSH_NOTIF.md"},"PUSH_NOTIF.md"),". setup Pushkit for IOS"),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("h4",{id:"how-to-use-call-screen"},"How to use call screen."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/tel4vn/pitel-ui-kit/blob/main/lib/features/call_screen/call_screen.dart"},"Example")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import 'package:flutter/material.dart';\nimport 'package:plugin_pitel/flutter_pitel_voip.dart';\nclass CallPage extends StatelessWidget {\n  const CallPage({super.key});\n  @override\n  Widget build(BuildContext context) {\n    return CallScreen(\n      goBack: () {\n        // Call your go back function in here\n      },\n      bgColor: Colors.cyan,\n    );\n  }\n}\n")),(0,a.kt)("h4",{id:"implement-sippitelhelperlistener-in-your-home-screen"},"Implement SipPitelHelperListener in your Home screen,"),(0,a.kt)("p",null,"In your Home screen, please implement SipPitelHelperListener to use plugin_pitel.",(0,a.kt)("a",{parentName:"p",href:"https://github.com/tel4vn/pitel-ui-kit/blob/main/lib/features/home/home_screen.dart"},"Example")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"class HomeScreen extends StatefulWidget {\n  final PitelCall _pitelCall = PitelClient.getInstance().pitelCall;\n  HomeScreen({Key? key}) : super(key: key);\n\n  @override\n  State<HomeScreen> createState() => _MyHomeScreen();\n}\n\nclass _MyHomeScreen extends State<HomeScreen>\n    implements SipPitelHelperListener {    // Implement SipPitelHelperListener in here\n    PitelClient pitelClient = PitelClient.getInstance();\n    PitelCall get pitelCall => widget._pitelCall;\n    ...\n}\n")),(0,a.kt)("h4",{id:"register-extension"},"Register extension"),(0,a.kt)("p",null,"Register extension from data of Tel4vn provide. Example: 101, 102,\u2026"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Create 1 button to fill data to register extension.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'ElevatedButton(\n        onPressed: () {\n          final sipInfo = SipInfoData.fromJson({\n            "authPass": "${Password}",\n            "registerServer": "${Domain}",\n            "outboundServer": "${Outbound Proxy}",\n            "userID": UUser,                // Example 101\n            "authID": UUser,                // Example 101\n            "accountName": "${UUser}",      // Example 101\n            "displayName": "${UUser}@${Domain}",\n            "dialPlan": null,\n            "randomPort": null,\n            "voicemail": null,\n            "wssUrl": "${URL WSS}",\n            "userName": "${username}@${Domain}",\n            "apiDomain": "${URL API}"\n          });\n\n          final pitelClient = PitelServiceImpl();\n          pitelClient.setExtensionInfo(sipInfo);\n        },\n        child: const Text("Register"),),\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Register status")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"@override\n  void registrationStateChanged(PitelRegistrationState state) {\n    switch (state.state) {\n      case PitelRegistrationStateEnum.REGISTRATION_FAILED:\n        goBack();\n        break;\n      case PitelRegistrationStateEnum.NONE:\n      case PitelRegistrationStateEnum.UNREGISTERED:\n      case PitelRegistrationStateEnum.REGISTERED:\n        setState(() {\n          receivedMsg = 'REGISTERED';\n        });\n        break;\n    }\n  }\n")),(0,a.kt)("h4",{id:"initialize-call-screen"},"Initialize call screen"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Initialize state & listener function")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"    @override\n    initState() {\n        super.initState();\n        pitelCall.addListener(this);\n        _initRenderers();\n    }\n    \n    // INIT: Initialize Pitel\n    void _initRenderers() async {\n        await pitelCall.initializeLocal();\n        await pitelCall.initializeRemote();\n    }\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Dispose & Deactive function")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"  // Dispose pitelcall\n  void _disposeRenderers() {\n    pitelCall.disposeLocalRenderer();\n    pitelCall.disposeRemoteRenderer();\n  }\n  // Deactive When call end\n  @override\n  deactivate() {\n    super.deactivate();\n    _handleHangup();\n    pitelCall.removeListener(this);\n    _disposeRenderers();\n  }\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Hangup function")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"  pitelCall.hangup();\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Accept call function")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"  pitelCall.answer();\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Listen state function")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"  // STATUS: Handle call state\n  @override\n  void callStateChanged(String callId, PitelCallState callState) {\n    setState(() {\n        // setState for callState\n      _state = callState.state;\n    });\n    switch (callState.state) {\n      case PitelCallStateEnum.HOLD:\n      case PitelCallStateEnum.UNHOLD:\n        break;\n      case PitelCallStateEnum.MUTED:\n      case PitelCallStateEnum.UNMUTED:\n        break;\n      case PitelCallStateEnum.STREAM:\n        break;\n      case PitelCallStateEnum.ENDED:\n      case PitelCallStateEnum.FAILED:\n        _backToDialPad();\n        break;\n      case PitelCallStateEnum.CONNECTING:\n      case PitelCallStateEnum.PROGRESS:\n      case PitelCallStateEnum.ACCEPTED:\n      case PitelCallStateEnum.CONFIRMED:\n      case PitelCallStateEnum.NONE:\n      case PitelCallStateEnum.CALL_INITIATION:\n      case PitelCallStateEnum.REFER:\n        break;\n    }\n  }\n")),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("p",null,"Please checkout repo github to get ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/tel4vn/pitel-ui-kit"},"example")),(0,a.kt)("h2",{id:"how-to-test"},"How to test"),(0,a.kt)("p",null,"Using tryit to test voip call connection & conversation\nSetting: "),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Access to link ",(0,a.kt)("a",{parentName:"li",href:"https://tryit.jssip.net/"},"https://tryit.jssip.net/")),(0,a.kt)("li",{parentName:"ol"},"Enter extension: example 102"),(0,a.kt)("li",{parentName:"ol"},"Click Setting icon"),(0,a.kt)("li",{parentName:"ol"},"Enter information to input field\n",(0,a.kt)("img",{alt:"tryit",src:n(11339).Z,width:"300",height:"415"})),(0,a.kt)("li",{parentName:"ol"},"Save"),(0,a.kt)("li",{parentName:"ol"},"Click icon -> to connect")))}m.isMDXComponent=!0},64445:(e,t,n)=>{n.d(t,{Z:()=>l});const l=n.p+"assets/images/pitel_connect_flow-ccd3cde51da89b0c171be33947cee965.png"},92219:(e,t,n)=>{n.d(t,{Z:()=>l});const l=n.p+"assets/images/pitel_img_1-d44e3ec1e1ffff13509b8cd70a5d64b8.png"},11339:(e,t,n)=>{n.d(t,{Z:()=>l});const l=n.p+"assets/images/pitel_img_3-20242c44b60e136101a730bbd03153ab.png"},30015:(e,t,n)=>{n.d(t,{Z:()=>l});const l=n.p+"assets/images/pitel_img_call-21b29dd7ee8e59f0aff384d842d632a5.png"}}]);