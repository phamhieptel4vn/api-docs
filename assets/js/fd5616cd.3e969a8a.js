"use strict";(self.webpackChunkapi_docs=self.webpackChunkapi_docs||[]).push([[7230],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>f});var i=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=i.createContext({}),s=function(e){var n=i.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=s(e.components);return i.createElement(p.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},m=i.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=s(t),m=a,f=c["".concat(p,".").concat(m)]||c[m]||d[m]||r;return t?i.createElement(f,o(o({ref:n},u),{},{components:t})):i.createElement(f,o({ref:n},u))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,o=new Array(r);o[0]=m;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l[c]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<r;s++)o[s]=t[s];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}m.displayName="MDXCreateElement"},82913:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var i=t(87462),a=(t(67294),t(3905));const r={title:"Example",sidebar_position:3},o=void 0,l={unversionedId:"pitel_ui_kit",id:"pitel_ui_kit",title:"Example",description:"Pitel UI Kit Demo",source:"@site/pitel_app_voip/pitel_ui_kit.md",sourceDirName:".",slug:"/pitel_ui_kit",permalink:"/pitel_app_voip/pitel_ui_kit",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Example",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Push notification",permalink:"/pitel_app_voip/push_notif"}},p={},s=[{value:"Pitel UI Kit Demo",id:"pitel-ui-kit-demo",level:3},{value:"Installation",id:"installation",level:2}],u={toc:s},c="wrapper";function d(e){let{components:n,...t}=e;return(0,a.kt)(c,(0,i.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"pitel-ui-kit-demo"},"Pitel UI Kit Demo"),(0,a.kt)("p",null,"pitel_ui_kit is demo project. Check out from ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/tel4vn/pitel-ui-kit/tree/feature/v1.0.2"},"pitel_ui_kit"),"."),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"Note"),"\nPitel UI Kit requires flutter version 3.7.7, dart version 2.19.4")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Setup to wake up app"),": please follow guide in ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/tel4vn/flutter-pitel-voip/blob/main/PUSH_NOTIF.md"},"here")," to setting push notification (FCM for android), Pushkit (for IOS)."),(0,a.kt)("li",{parentName:"ul"},"In file ",(0,a.kt)("inlineCode",{parentName:"li"},"firebase_options.dart"),", fill information from your google_service.json")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"  // Replace information from your google_service.json\n  static const FirebaseOptions android = FirebaseOptions(\n    apiKey: '${apiKey}',\n    appId: '${appId}',\n    messagingSenderId: '${messagingSenderId}',\n    projectId: '${projectId}',\n    storageBucket: '${storageBucket}',\n  );\n  static const FirebaseOptions ios = FirebaseOptions(\n    apiKey: '${apiKey}',\n    appId: '${appId}',\n    messagingSenderId: '${messagingSenderId}',\n    projectId: '${projectId}',\n    storageBucket: '${storageBucket}',\n    iosClientId: '${iosClientId}',\n    iosBundleId: '${iosBundleId}',\n  );\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Replace com.pitel.uikit.demo with your bundleId/ packageId in",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"IOS: Open Xcode -> Signing & Capabilities -> Select Team & Replace your bundleId in field Bundle Identifier"),(0,a.kt)("li",{parentName:"ul"},"Android: In file ",(0,a.kt)("inlineCode",{parentName:"li"},"android/app/build.gradle"),". Replace com.pitel.uikit.demo with your packageId")))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'defaultConfig {\n        applicationId "com.pitel.uikit.demo"            // Replace your packageId\n        minSdkVersion flutterMinSdkVersion.toString()\n        targetSdkVersion flutter.targetSdkVersion\n        versionCode flutterVersionCode.toInteger()\n        versionName flutterVersionName\n    }\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"In file ",(0,a.kt)("inlineCode",{parentName:"li"},"app.dart")," fill sip info data")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'final sipInfoData = SipInfoData.fromJson({\n    "authPass": "${Password}",\n    "registerServer": "${Domain}",\n    "outboundServer": "${Outbound Proxy}",\n    "userID": UUser,                // Example 101\n    "authID": UUser,                // Example 101\n    "accountName": "${UUser}",      // Example 101\n    "displayName": "${UUser}@${Domain}",\n    "dialPlan": null,\n    "randomPort": null,\n    "voicemail": null,\n    "wssUrl": "${URL WSS}",\n    "userName": "${username}@${Domain}",\n    "apiDomain": "${URL API}"\n});\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"In file ",(0,a.kt)("inlineCode",{parentName:"li"},"app.dart")," fill sip info data")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"  final pnPushParams = PnPushParams(\n      pnProvider: Platform.isAndroid ? 'fcm' : 'apns',\n      pnParam: Platform.isAndroid\n          ? '${bundleId}'                         // Example com.company.app\n          : '${apple_team_id}.${bundleId}.voip',  // Example com.company.app\n      pnPrid: '${deviceToken}',\n  );\n  pitelService.setExtensionInfo(sipInfoData, pnPushParams);\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"In file ",(0,a.kt)("inlineCode",{parentName:"li"},"home_screen.dart")," please enter the information for sending notifications.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"}," // Register Device token when SIP register success (state REGISTER)\n void _registerDeviceToken() async {\n    final fcmToken = await PushVoipNotif.getFCMToken();\n    final response = await pitelClient.registerDeviceToken(\n      deviceToken: \"${device_token}\",\n      platform: '${platform}',          // android or ios\n      bundleId: '${bundle_id}',         // Example: com.pitel.uikit.demo\n      domain: '${Domain}',\n      extension: '${UUser}',\n      appMode: kReleaseMode ? 'production' : 'dev',\n      fcmToken: fcmToken,\n    );\n  }\n  // Remove Device token when user logout (state UNREGISTER)\n  void _removeDeviceToken() async {\n    final response = await pitelClient.removeDeviceToken(\n      deviceToken: '${device_token}',\n      domain: '${Domain}',\n      extension: '${UUser}',\n    );\n  }\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Get device token from function")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"await PushVoipNotif.getDeviceToken();\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Get package")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"flutter pub get\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Run source code")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"flutter run\n")))}d.isMDXComponent=!0}}]);